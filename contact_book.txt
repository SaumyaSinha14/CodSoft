The Contact Book is a Python-based application designed to help users store, organize, and manage their contacts efficiently. Built with Python's tkinter library for a graphical user interface (GUI), this application allows users to add, update, search, delete, and view contacts in a simple and intuitive interface.

Key Features

Add New Contact
Allows users to add a new contact by entering details such as Name, Phone Number, Email, and Address.
Once added, the contact is stored and displayed in the list for easy access.
View All Contacts

Displays a list of all saved contacts with their Name, Phone Number, Email, and Address.
The contacts are displayed in a scrollable list format, making it easy to navigate through multiple entries.
Search Contacts

Search for contacts by Name or Phone Number.
The search is case-insensitive and allows users to quickly find specific contacts.
Update Contact

Users can select a contact from the list, edit the details, and update it.
Ensures that old details are replaced with the new ones, keeping the contact information up to date.
Delete Contact

Easily delete a contact by selecting it from the list and clicking the delete button.
This removes the selected contact from the database.
User-Friendly Interface

Built using tkinter, the application offers a clean, intuitive, and easy-to-use interface with labeled buttons for all the main operations.
The layout is designed to provide a smooth user experience for managing contacts.

About Tkinter - 
Tkinter is the inbuilt python module that is used to create GUI applications. It is one of the most commonly used modules for creating GUI applications in Python as it is simple and easy to work with.

In Tkinter, a widget is essentially a graphical component that the user can interact with. They can range from simple elements like buttons and labels to more complex ones like text entry fields, listboxes, and canvases. Each widget serves a specific purpose and can be customized to fit the design and functionality requirements of your application.

Each widget in Tkinter is an instance of a specific class defined in the Tkinter Module. These classes provide methods and attributes that allow you to configure the widget’s appearance, behavior, and functionality. Widgets are typically added to the application’s window or frames using layout managers like pack(), grid(), or place(), which determine their position and size within the interface.

Referece - Tkinter from GeeksForGeeks
